<?xml version="1.0" encoding="UTF-8"?>
<java version="1.6.0_0" class="java.beans.XMLDecoder">

<!-- This is a neuroConstruct project file. It's best to open this
file with neuroConstruct, as opposed to editing it directly. 

Note that this file is neuroConstruct specific and isn't any 
part of NeuroML or any standardised XML specification. -->

 <object class="ucl.physiol.neuroconstruct.project.BasicProjectInfo">
  <void property="projectDescription">
   <string>Simple test project to check generation of N&amp;G simulation codes &amp; non uniform params along cells, e.g. e_pas, g_pas, etc.</string>
  </void>
  <void property="projectFileVersion">
   <string>neuroConstruct v1.4.1</string>
  </void>
  <void property="projectName">
   <string>TestDetailedMorphs</string>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.RegionsInfo">
  <void property="internalData">
   <void method="get">
    <string>Name</string>
    <void method="add">
     <string>SampleRegion</string>
    </void>
   </void>
   <void method="get">
    <string>Colour</string>
    <void method="add">
     <object class="java.awt.Color">
      <int>255</int>
      <int>255</int>
      <int>255</int>
      <int>255</int>
     </object>
    </void>
   </void>
   <void method="get">
    <string>Description</string>
    <void method="add">
     <object class="ucl.physiol.neuroconstruct.project.RectangularBox">
      <void property="parameterList">
       <void index="4">
        <void property="value">
         <float>50.0</float>
        </void>
       </void>
      </void>
     </object>
    </void>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.CellGroupsInfo">
  <void property="internalData">
   <void method="get">
    <string>Cell Packing Adapter</string>
    <void method="add">
     <object class="ucl.physiol.neuroconstruct.project.packing.SinglePositionedCellPackingAdapter"/>
    </void>
   </void>
   <void method="get">
    <string>Cell Type</string>
    <void method="add">
     <string>SampleCell</string>
    </void>
   </void>
   <void method="get">
    <string>Priority</string>
    <void method="add">
     <int>10</int>
    </void>
   </void>
   <void method="get">
    <string>Colour</string>
    <void method="add">
     <object class="java.awt.Color">
      <int>255</int>
      <int>0</int>
      <int>0</int>
      <int>255</int>
     </object>
    </void>
   </void>
   <void method="get">
    <string>Region Name</string>
    <void method="add">
     <string>SampleRegion</string>
    </void>
   </void>
   <void method="get">
    <string>Cell Group Name</string>
    <void method="add">
     <string>SampleCellGroup</string>
    </void>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.SimPlotInfo">
  <void property="allSimPlots">
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimPlot">
     <void property="cellGroup">
      <string>SampleCellGroup</string>
     </void>
     <void property="cellNumber">
      <string>*</string>
     </void>
     <void property="graphWindow">
      <string>SampleGraph</string>
     </void>
     <void property="maxValue">
      <float>50.0</float>
     </void>
     <void property="minValue">
      <float>-90.0</float>
     </void>
     <void property="plotAndOrSave">
      <string>Plot and save</string>
     </void>
     <void property="plotReference">
      <string>SamplePlot</string>
     </void>
     <void property="segmentId">
      <string>0</string>
     </void>
    </object>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.ProjectProperties">
  <void property="preferredSaveFormat">
   <string>Java Serialized Object Format</string>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.utils.Display3DProperties">
  <void property="backgroundColour3D">
   <object class="java.awt.Color">
    <int>144</int>
    <int>166</int>
    <int>232</int>
    <int>255</int>
   </object>
  </void>
  <void property="cellColour3D">
   <object class="java.awt.Color">
    <int>255</int>
    <int>255</int>
    <int>255</int>
    <int>255</int>
   </object>
  </void>
  <void property="show3DAxes">
   <boolean>true</boolean>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.neuron.NeuronSettings">
  <void property="copySimFiles">
   <boolean>true</boolean>
  </void>
  <void property="nativeBlocks">
   <void method="put">
    <float>10.0</float>
    <string>
print &quot;    Finished simulation run, carying out some tests...&quot;

// Using testing functions from nCtools.hoc


////////////////////////    The tests   ////////////////////////////////////////////////

SampleCell[0].Soma {
	testEquals(gmax_LeakConductance , 0.0003)
	testEquals(e_LeakConductance, -79)

	testEquals(ek, -73)
	testEquals(ena, 55.5)
	testEquals(gmax_KConductance ,0.036)
		
	testEquals(extraParam_NaConductance ,123)
	testEquals(cm ,1)
	testEquals(Ra, 30)
}

SampleCell[0].mainAxonSec {
	testEquals(gmax_LeakConductance , 0.0001)
	testEquals(e_LeakConductance, -70) 

	testEquals(ena, 55.5)
	testEquals(ek, -77)
	testEquals(gmax_KConductance ,0.03)

	testEquals(extraParam_NaConductance ,321)
	testEquals(cm ,3)
	testEquals(Ra, 10)
}

SampleCell[0].mainDendSec {
	testEquals(gmax_LeakConductance , 0.0002)
	testEquals(e_LeakConductance , -69) 

	testEquals(ek, -73)
	testEquals(gmax_KConductance ,0.036)

	testEquals(extraParam_NaConductance ,111)
	testEquals(cm ,2)
	testEquals(Ra, 30)
}


////////////////////////    End of tests   ///////////////////////////////////////////


createTestReport()




</string>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.genesis.GenesisSettings">
  <void property="nativeBlocks">
   <void method="put">
    <int>15</int>
    <string>

////////////////////////    The tests   ////////////////////////////////////////////////

ce /cells/SampleCellGroup/SampleCellGroup_0/Soma

testEquals  {getfield Em} -0.079
testEquals  {getfield KConductance Ek} -0.073
testEquals  {getfield NaConductance Ek} 0.0555

float surface = {getfield KConductance surface}
testEquals {{getfield KConductance Gbar}/surface} 360

testEquals {1/{ {getfield Rm} * surface} } 3

testEquals {getfield NaConductance extraParam} 123

testEquals {{getfield Cm} / surface} 0.01
testEquals { { {getfield Ra} * 3.14159265 * {getfield dia} * {getfield dia} } / {4 * {getfield len}} } 0.3



ce /cells/SampleCellGroup/SampleCellGroup_0/mainAxon

testEquals  {getfield Em}  -0.07
testEquals  {getfield KConductance Ek} -0.077
testEquals  {getfield NaConductance Ek} 0.0555

float surface = {getfield KConductance surface}
testEquals {{getfield KConductance Gbar}/surface} 300

testEquals {1/{ {getfield Rm} * surface} } 1

testEquals {getfield NaConductance extraParam} 321

testEquals {{getfield Cm} / surface} 0.03
testEquals { { {getfield Ra} * 3.14159265 * {getfield dia} * {getfield dia} } / {4 * {getfield len}} } 0.1

ce /cells/SampleCellGroup/SampleCellGroup_0/mainDend

testEquals  {getfield Em} -0.069
testEquals  {getfield KConductance Ek} -0.073

float surface = {getfield KConductance surface}
testEquals {{getfield KConductance Gbar}/surface} 360

testEquals {1/{ {getfield Rm} * surface} } 2

testEquals {getfield NaConductance extraParam} 111

testEquals {{getfield Cm} / surface} 0.02
testEquals { { {getfield Ra} * 3.14159265 * {getfield dia} * {getfield dia} } / {4 * {getfield len}} } 0.3


////////////////////////    End of tests   ///////////////////////////////////////////

createTestReport</string>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.psics.PsicsSettings"/>
 <object class="ucl.physiol.neuroconstruct.simulation.SimulationParameters">
  <void property="dt">
   <float>0.02</float>
  </void>
  <void property="duration">
   <float>100.0</float>
  </void>
  <void property="reference">
   <string>Sim_105</string>
  </void>
  <void property="saveCopyGenSimFiles">
   <boolean>true</boolean>
  </void>
  <void property="whatToRecord">
   <int>2</int>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.ElecInputInfo">
  <void property="allStims">
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.simulation.IClampSettings">
     <void property="amp">
      <void property="fixedNum">
       <float>0.2</float>
      </void>
     </void>
     <void property="cellGroup">
      <string>SampleCellGroup</string>
     </void>
     <void property="dur">
      <void property="numberType">
       <int>11</int>
      </void>
     </void>
     <void property="reference">
      <string>SampleIClamp</string>
     </void>
    </object>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.SimConfigInfo">
  <void property="allSimConfigs">
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>SampleCellGroup</string>
      </void>
     </void>
     <void property="description">
      <string>This is the default configuration of the Cell Groups, stimulations, plots, etc for this project</string>
     </void>
     <void property="inputs">
      <void method="add">
       <string>SampleIClamp</string>
      </void>
     </void>
     <void property="name">
      <string>Default Simulation Configuration</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>SamplePlot</string>
      </void>
     </void>
     <void property="simDuration">
      <float>100.0</float>
     </void>
    </object>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.SimpleNetworkConnectionsInfo"/>
 <object class="ucl.physiol.neuroconstruct.project.ArbourConnectionsInfo"/>
</java>
